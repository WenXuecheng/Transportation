{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"Login\",\n  data() {\n    var validateothers = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入'));\n      } else {\n        if (this.isValidString(value) == true) {\n          this.$refs.ruleForm.validateField('checkPass');\n        }\n        callback(new Error('长度在 5 到 15 个字符，只能使用数字、英文字母和@.*/-+'));\n      }\n    };\n    var validatePhone = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.ruleForm.pass) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      user: {},\n      rules: {\n        username: [{\n          validator: validateothers,\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 5,\n          max: 15,\n          message: '长度在 5 到 15 个字符，只能使用数字、英文字母和@.*/-+',\n          trigger: 'blur'\n        }],\n        password: [{\n          validator: validateothers,\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 5,\n          max: 20,\n          message: '长度在 5 到 20 个字符，只能使用数字、英文字母和@.*/-+',\n          trigger: 'blur'\n        }],\n        confirmPassword: [{\n          validator: validateothers,\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 5,\n          max: 20,\n          message: '长度在 2 到 20 个字符，只能使用数字、英文字母和@.*/-+',\n          trigger: 'blur'\n        }],\n        nickname: [{\n          validator: validateothers,\n          required: true,\n          message: '请输昵称',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 10,\n          message: '长度在 1 到 10 个字符，只能使用数字、英文字母和@.*/-+',\n          trigger: 'blur'\n        }],\n        email: [{\n          validator: validateothers,\n          required: true,\n          message: '请输入邮箱 example.com',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 20,\n          message: '长度在 1 到 20 个字符，只能使用数字、英文字母和@.*/-+',\n          trigger: 'blur'\n        }],\n        phone: [{\n          validator: validateothers,\n          required: true,\n          message: '请输入电话号码',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 20,\n          message: 'Example：89692184441',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    login() {\n      this.user.username = this.removeSpaces(this.user.username);\n      this.user.password = this.removeSpaces(this.user.password);\n      this.user.confirmPassword = this.removeSpaces(this.user.confirmPassword);\n      this.user.nickname = this.removeSpaces(this.user.nickname);\n      this.user.email = this.removeSpaces(this.user.email);\n      this.user.phone = this.removeSpaces(this.user.phone);\n      this.$refs['userForm'].validate(valid => {\n        if (valid) {\n          // 表单校验合法\n          if (this.user.password !== this.user.confirmPassword) {\n            this.$message.error(\"两次输入的密码不一致\");\n            return false;\n          }\n          this.request.post(\"/user/register\", this.user).then(res => {\n            if (res.code === '200') {\n              this.$router.push(\"/login\");\n              this.$message.success(\"注册成功\");\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    },\n    removeSpaces(str) {\n      try {\n        return str.replace(/\\s+/g, '');\n      } catch (e) {\n        this.$message.error(\"请正确输入\");\n        return null;\n      }\n    },\n    isValidString(str) {\n      const pattern = /^[A-Za-z0-9@.*\\/\\-+]+$/;\n      return pattern.test(str);\n    },\n    isValidStringPhone(str) {\n      const pattern = /^[0-9]+$/;\n      return pattern.test(str);\n    }\n  }\n};","map":{"version":3,"names":["name","data","validateothers","rule","value","callback","Error","isValidString","$refs","ruleForm","validateField","validatePhone","pass","user","rules","username","validator","required","message","trigger","min","max","password","confirmPassword","nickname","email","phone","methods","login","removeSpaces","validate","valid","$message","error","request","post","then","res","code","$router","push","success","msg","str","replace","e","pattern","test","isValidStringPhone"],"sources":["src/views/Register.vue"],"sourcesContent":["<template>\r\n    <div class=\"wrapper\">\r\n        <div style=\"margin: 150px auto; background-color: #fff; width: 350px; height: 500px; padding: 20px; border-radius: 10px\">\r\n            <div style=\"margin: 20px 0; text-align: center; font-size: 24px\"><b>注 册</b></div>\r\n            <el-form :model=\"user\" :rules=\"rules\" ref=\"userForm\">\r\n                <el-form-item prop=\"username\">\r\n                    <el-input placeholder=\"请输入账号\" size=\"medium\" prefix-icon=\"el-icon-user\" v-model=\"user.username\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"password\">\r\n                    <el-input placeholder=\"请输入密码\" size=\"medium\" prefix-icon=\"el-icon-lock\" show-password v-model=\"user.password\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"confirmPassword\">\r\n                    <el-input placeholder=\"请确认密码\" size=\"medium\" prefix-icon=\"el-icon-lock\" show-password v-model=\"user.confirmPassword\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"confirmPassword\">\r\n                    <el-input placeholder=\"请输入昵称\" size=\"medium\" prefix-icon=\"el-icon-lock\"  v-model=\"user.nickname\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"confirmPassword\">\r\n                    <el-input placeholder=\"请输入邮箱 如：example@mail.com\" size=\"medium\" prefix-icon=\"el-icon-lock\"  v-model=\"user.email\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"confirmPassword\">\r\n                    <el-input placeholder=\"请输入电话 如：89692184441\" size=\"medium\" prefix-icon=\"el-icon-lock\"  v-model=\"user.phone\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item style=\"margin: 5px 0; text-align: right\">\r\n                    <el-button type=\"primary\" size=\"small\"  autocomplete=\"off\" @click=\"login\">注册</el-button>\r\n                    <el-button type=\"warning\" size=\"small\"  autocomplete=\"off\" @click=\"$router.push('/login')\">返回登录</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nexport default {\r\n    name: \"Login\",\r\n    data() {\r\n        var validateothers = (rule, value, callback) => {\r\n            if (value === '') {\r\n                callback(new Error('请输入'));\r\n            } else {\r\n                if (this.isValidString(value) == true) {\r\n                    this.$refs.ruleForm.validateField('checkPass');\r\n                }\r\n                callback(new Error('长度在 5 到 15 个字符，只能使用数字、英文字母和@.*/-+'));\r\n            }\r\n        };\r\n        var validatePhone = (rule, value, callback) => {\r\n            if (value === '') {\r\n                callback(new Error('请再次输入密码'));\r\n            } else if (value !== this.ruleForm.pass) {\r\n                callback(new Error('两次输入密码不一致!'));\r\n            } else {\r\n                callback();\r\n            }\r\n        };\r\n        return {\r\n            user: {},\r\n            rules: {\r\n                username: [\r\n                    { validator: validateothers, required: true, message: '请输入用户名', trigger: 'blur' },\r\n                    { min: 5, max: 15, message: '长度在 5 到 15 个字符，只能使用数字、英文字母和@.*/-+', trigger: 'blur' }\r\n                ],\r\n                password: [\r\n                    { validator: validateothers, required: true, message: '请输入密码', trigger: 'blur' },\r\n                    { min: 5, max: 20, message: '长度在 5 到 20 个字符，只能使用数字、英文字母和@.*/-+', trigger: 'blur' }\r\n                ],\r\n                confirmPassword: [\r\n                    { validator: validateothers, required: true, message: '请输入密码', trigger: 'blur' },\r\n                    { min: 5, max: 20, message: '长度在 2 到 20 个字符，只能使用数字、英文字母和@.*/-+', trigger: 'blur' }\r\n                ],\r\n                nickname: [\r\n                    { validator: validateothers, required: true, message: '请输昵称', trigger: 'blur' },\r\n                    { min: 1, max: 10, message: '长度在 1 到 10 个字符，只能使用数字、英文字母和@.*/-+', trigger: 'blur' }\r\n                ],\r\n                email: [\r\n                    { validator: validateothers, required: true, message: '请输入邮箱 example.com', trigger: 'blur' },\r\n                    { min: 1, max: 20, message: '长度在 1 到 20 个字符，只能使用数字、英文字母和@.*/-+', trigger: 'blur' }\r\n                ],\r\n                phone: [\r\n                    { validator: validateothers, required: true, message: '请输入电话号码', trigger: 'blur' },\r\n                    { min: 1, max: 20, message: 'Example：89692184441', trigger: 'blur' }\r\n                ],\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        login() {\r\n            this.user.username=this.removeSpaces(this.user.username)\r\n            this.user.password=this.removeSpaces(this.user.password)\r\n            this.user.confirmPassword=this.removeSpaces(this.user.confirmPassword)\r\n            this.user.nickname=this.removeSpaces(this.user.nickname)\r\n            this.user.email=this.removeSpaces(this.user.email)\r\n            this.user.phone=this.removeSpaces(this.user.phone)\r\n            this.$refs['userForm'].validate((valid) => {\r\n                if (valid) {  // 表单校验合法\r\n                    if (this.user.password !== this.user.confirmPassword) {\r\n                        this.$message.error(\"两次输入的密码不一致\")\r\n                        return false\r\n                    }\r\n                    this.request.post(\"/user/register\", this.user).then(res => {\r\n                        if(res.code === '200') {\r\n                            this.$router.push(\"/login\")\r\n                            this.$message.success(\"注册成功\")\r\n                        } else {\r\n                            this.$message.error(res.msg)\r\n                        }\r\n                    })\r\n                }\r\n            });\r\n        },\r\n        removeSpaces(str) {\r\n            try {\r\n                return str.replace(/\\s+/g, '');\r\n            } catch (e){\r\n                this.$message.error(\"请正确输入\")\r\n                return null\r\n            }\r\n        },\r\n        isValidString(str) {\r\n        const pattern = /^[A-Za-z0-9@.*\\/\\-+]+$/;\r\n        return pattern.test(str);\r\n        },\r\n        isValidStringPhone(str) {\r\n            const pattern = /^[0-9]+$/;\r\n            return pattern.test(str);\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.wrapper {\r\n    height: 100vh;\r\n    background-image: linear-gradient(to bottom right, #FC466B , #3F5EFB);\r\n    overflow: hidden;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}