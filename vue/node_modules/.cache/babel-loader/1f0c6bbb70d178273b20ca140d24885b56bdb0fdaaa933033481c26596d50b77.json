{"ast":null,"code":"import * as echarts from 'echarts';\nexport default {\n  name: \"Dashbord\",\n  data() {\n    return {\n      orderInfo: {\n        numUser: 100,\n        totalOrderTurnover: 10000,\n        totalOrder: 100000,\n        exchangeRates: null\n      },\n      dialogVisible: false,\n      changeRates: null\n    };\n  },\n  mounted() {\n    // 页面元素渲染之后再触发\n    var option = {\n      title: {\n        text: '各季度会员数量统计',\n        subtext: '趋势图',\n        left: 'center'\n      },\n      tooltip: {\n        trigger: 'item'\n      },\n      legend: {\n        orient: 'vertical',\n        left: 'left'\n      },\n      xAxis: {\n        type: 'category',\n        data: [\"第一季度\", \"第二季度\", \"第三季度\", \"第四季度\"]\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [{\n        name: \"星巴克\",\n        data: [],\n        type: 'bar'\n      }, {\n        name: \"星巴克\",\n        data: [],\n        type: 'line'\n      }, {\n        name: \"瑞幸咖啡\",\n        data: [],\n        type: 'bar'\n      }, {\n        name: \"瑞幸咖啡\",\n        data: [],\n        type: 'line'\n      }]\n    };\n\n    // 饼图\n\n    var pieOption = {\n      title: {\n        text: '各季度会员数量统计',\n        subtext: '比例图',\n        left: 'center'\n      },\n      tooltip: {\n        trigger: 'item',\n        formatter: '{a} <br/>{b} : {c} ({d}%)'\n      },\n      legend: {\n        orient: 'vertical',\n        left: 'left'\n      },\n      series: [{\n        name: \"星巴克\",\n        type: 'pie',\n        radius: '55%',\n        center: ['25%', '70%'],\n        label: {\n          //饼图图形上的文本标签\n          normal: {\n            show: true,\n            position: 'inner',\n            //标签的位置\n            textStyle: {\n              fontWeight: 300,\n              fontSize: 14,\n              //文字的字体大小\n              color: \"#fff\"\n            },\n            formatter: '{c}({d}%)'\n          }\n        },\n        data: [],\n        // 填空\n        emphasis: {\n          itemStyle: {\n            shadowBlur: 10,\n            shadowOffsetX: 0,\n            shadowColor: 'rgba(0, 0, 0, 0.5)'\n          }\n        }\n      }, {\n        name: \"瑞幸咖啡\",\n        type: 'pie',\n        radius: '50%',\n        center: ['75%', '50%'],\n        label: {\n          //饼图图形上的文本标签\n          normal: {\n            show: true,\n            position: 'inner',\n            //标签的位置\n            textStyle: {\n              fontWeight: 300,\n              fontSize: 14,\n              //文字的字体大小\n              color: \"#fff\"\n            },\n            formatter: '{d}%'\n          }\n        },\n        data: [{\n          name: \"第一季度\",\n          value: 5\n        }, {\n          name: \"第二季度\",\n          value: 6\n        }, {\n          name: \"第三季度\",\n          value: 7\n        }, {\n          name: \"第四季度\",\n          value: 8\n        }],\n        // 填空\n        emphasis: {\n          itemStyle: {\n            shadowBlur: 10,\n            shadowOffsetX: 0,\n            shadowColor: 'rgba(0, 0, 0, 0.5)'\n          }\n        }\n      }]\n    };\n    var chartDom = document.getElementById('main');\n    var myChart = echarts.init(chartDom);\n    var pieDom = document.getElementById('pie');\n    var pieChart = echarts.init(pieDom);\n    this.request.get(\"/echarts/members\").then(res => {\n      // 填空\n      // option.xAxis.data = res.data.x\n      option.series[0].data = res.data;\n      option.series[1].data = res.data;\n      option.series[2].data = [5, 6, 7, 8];\n      option.series[3].data = [5, 6, 7, 8];\n      // 数据准备完毕之后再set\n      myChart.setOption(option);\n      pieOption.series[0].data = [{\n        name: \"第一季度\",\n        value: '2'\n      }, {\n        name: \"第二季度\",\n        value: '5'\n      }, {\n        name: \"第三季度\",\n        value: '6'\n      }, {\n        name: \"第四季度\",\n        value: '1'\n      }\n      // {name: \"第一季度\", value: res.data[0]},\n      // {name: \"第二季度\", value: res.data[1]},\n      // {name: \"第三季度\", value: res.data[2]},\n      // {name: \"第四季度\", value: res.data[3]},\n      ];\n\n      pieChart.setOption(pieOption);\n    });\n  },\n  created() {\n    this.updateExchangeRate();\n    this.usernum();\n    this.ordernum();\n  },\n  methods: {\n    //禁止页面滑动\n    stop() {\n      var box = function (e) {\n        passive: false;\n      };\n      document.body.style.overflow = 'hidden';\n      document.addEventListener(\"touchmove\", box, false);\n    },\n    changeRatesFunc() {\n      console.log(this.changeRates);\n      this.request.get(\"/others/1/\" + this.changeRates).then(res => {\n        if (res.code == '200') {\n          this.updateExchangeRate();\n          this.dialogVisible = false;\n          this.$message.success(\"保存成功\");\n        }\n      });\n    },\n    updateExchangeRate() {\n      this.request.get(\"/others/1\").then(res => {\n        if (res.code == '200') {\n          this.orderInfo.exchangeRates = res.data;\n        }\n      });\n    },\n    usernum() {\n      this.request.get(\"/user/usernum\").then(res => {\n        if (res.code == '200') {\n          this.orderInfo.numUser = res.data;\n        }\n      });\n    },\n    ordernum() {\n      this.request.get(\"/order/ordernum\").then(res => {\n        if (res.code == '200') {\n          this.orderInfo.totalOrder = res.data;\n        }\n      });\n    },\n    totalOrderTurnover() {\n      this.request.get(\"/order/orderturnover\").then(res => {\n        if (res.code == '200') {\n          this.orderInfo.totalOrderTurnover = res.data;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["echarts","name","data","orderInfo","numUser","totalOrderTurnover","totalOrder","exchangeRates","dialogVisible","changeRates","mounted","option","title","text","subtext","left","tooltip","trigger","legend","orient","xAxis","type","yAxis","series","pieOption","formatter","radius","center","label","normal","show","position","textStyle","fontWeight","fontSize","color","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","value","chartDom","document","getElementById","myChart","init","pieDom","pieChart","request","get","then","res","setOption","created","updateExchangeRate","usernum","ordernum","methods","stop","box","e","passive","body","style","overflow","addEventListener","changeRatesFunc","console","log","code","$message","success"],"sources":["src/views/Dashbord.vue"],"sourcesContent":["<template>\n  <div>\n    <el-row :gutter=\"10\" style=\"margin-bottom: 60px\">\n      <el-col :span=\"6\">\n        <el-card style=\"color: #409EFF\">\n          <div><i class=\"el-icon-user-solid\" /> 用户总数</div>\n          <div style=\"padding: 10px 0; text-align: center; font-weight: bold\">\n              {{this.orderInfo.numUser}}\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"6\">\n        <el-card style=\"color: #F56C6C\">\n          <div><i class=\"el-icon-money\" /> 订单总成交量</div>\n          <div style=\"padding: 10px 0; text-align: center; font-weight: bold\">\n              {{this.orderInfo.totalOrderTurnover}}\n          </div>\n        </el-card>\n      </el-col>\n        <el-col :span=\"6\">\n            <el-card style=\"color: #E6A23C\">\n                <div><i class=\"el-icon-s-shop\" /> 订单总量</div>\n                <div style=\"padding: 10px 0; text-align: center; font-weight: bold\">\n                    {{this.orderInfo.totalOrder}}\n                </div>\n            </el-card>\n        </el-col>\n      <el-col :span=\"6\">\n        <el-card style=\"color: #67C23A\">\n          <div><i class=\"el-icon-bank-card\" /> 人民币对卢布汇率</div>\n          <div style=\"padding: 10px 0; text-align: center; font-weight: bold\">\n              <el-button type=\"success\" @click=\"dialogVisible = true\">{{this.orderInfo.exchangeRates}}</el-button>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n    <el-row>\n      <el-col :span=\"12\">\n        <div id=\"main\" style=\"width: 500px; height: 450px\"></div>\n      </el-col>\n      <el-col :span=\"12\">\n        <div id=\"pie\" style=\"width: 500px; height: 400px\"></div>\n      </el-col>\n    </el-row>\n\n      <el-dialog\n              title=\"更改汇率\"\n              :visible.sync=\"dialogVisible\"\n              width=\"30%\">\n          <el-input v-model=\"changeRates\" placeholder=\"请输入内容\"></el-input>\n          <span slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"dialogVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"changeRatesFunc\">确 定</el-button>\n          </span>\n      </el-dialog>\n\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts'\n\nexport default {\n  name: \"Dashbord\",\n  data() {\n    return {\n        orderInfo: {\n            numUser: 100,\n            totalOrderTurnover: 10000,\n            totalOrder: 100000,\n            exchangeRates: null,\n        },\n        dialogVisible : false,\n        changeRates: null,\n    }\n  },\n  mounted() {  // 页面元素渲染之后再触发\n    var option = {\n      title: {\n        text: '各季度会员数量统计',\n        subtext: '趋势图',\n        left: 'center'\n      },\n      tooltip: {\n        trigger: 'item'\n      },\n      legend: {\n        orient: 'vertical',\n        left: 'left'\n      },\n      xAxis: {\n        type: 'category',\n        data: [\"第一季度\", \"第二季度\", \"第三季度\", \"第四季度\"]\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [\n        {\n          name: \"星巴克\",\n          data: [],\n          type: 'bar'\n        },\n        {\n          name: \"星巴克\",\n          data: [],\n          type: 'line'\n        },\n        {\n          name: \"瑞幸咖啡\",\n          data: [],\n          type: 'bar'\n        },\n        {\n          name: \"瑞幸咖啡\",\n          data: [],\n          type: 'line'\n        }\n      ]\n    };\n\n    // 饼图\n\n    var pieOption = {\n      title: {\n        text: '各季度会员数量统计',\n        subtext: '比例图',\n        left: 'center'\n      },\n      tooltip: {\n        trigger: 'item',\n        formatter: '{a} <br/>{b} : {c} ({d}%)'\n      },\n      legend: {\n        orient: 'vertical',\n        left: 'left'\n      },\n      series: [\n        {\n          name: \"星巴克\",\n          type: 'pie',\n          radius: '55%',\n          center: ['25%', '70%'],\n          label:{            //饼图图形上的文本标签\n            normal:{\n              show:true,\n              position:'inner', //标签的位置\n              textStyle : {\n                fontWeight : 300 ,\n                fontSize : 14,    //文字的字体大小\n                color: \"#fff\"\n              },\n              formatter:'{c}({d}%)'\n            }\n          },\n          data: [],  // 填空\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        },\n        {\n          name: \"瑞幸咖啡\",\n          type: 'pie',\n          radius: '50%',\n          center: ['75%', '50%'],\n          label:{            //饼图图形上的文本标签\n            normal:{\n              show:true,\n              position:'inner', //标签的位置\n              textStyle : {\n                fontWeight : 300 ,\n                fontSize : 14,    //文字的字体大小\n                color: \"#fff\"\n              },\n              formatter:'{d}%'\n            }\n          },\n          data: [\n            {name: \"第一季度\", value: 5},\n            {name: \"第二季度\", value: 6},\n            {name: \"第三季度\", value: 7},\n            {name: \"第四季度\", value: 8}\n            ],  // 填空\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }\n      ],\n\n    };\n\n\n    var chartDom = document.getElementById('main');\n    var myChart = echarts.init(chartDom);\n\n    var pieDom = document.getElementById('pie');\n    var pieChart = echarts.init(pieDom);\n\n    this.request.get(\"/echarts/members\").then(res => {\n      // 填空\n      // option.xAxis.data = res.data.x\n      option.series[0].data = res.data\n      option.series[1].data = res.data\n\n      option.series[2].data = [5,6,7,8]\n      option.series[3].data = [5,6,7,8]\n      // 数据准备完毕之后再set\n      myChart.setOption(option);\n\n\n      pieOption.series[0].data = [\n          {name: \"第一季度\", value: '2'},\n          {name: \"第二季度\", value: '5'},\n          {name: \"第三季度\", value: '6'},\n          {name: \"第四季度\", value: '1'},\n        // {name: \"第一季度\", value: res.data[0]},\n        // {name: \"第二季度\", value: res.data[1]},\n        // {name: \"第三季度\", value: res.data[2]},\n        // {name: \"第四季度\", value: res.data[3]},\n      ]\n      pieChart.setOption(pieOption)\n    })\n  },\n    created() {\n        this.updateExchangeRate()\n        this.usernum()\n        this.ordernum()\n    },\n    methods: {\n        //禁止页面滑动\n        stop(){\n            var box=function(e)\n            {passive: false ;};\n            document.body.style.overflow='hidden';\n            document.addEventListener(\"touchmove\",box,false);\n        },\n        changeRatesFunc()\n        {\n            console.log(this.changeRates)\n            this.request.get(\"/others/1/\"+this.changeRates).then(res => {\n                if (res.code == '200')\n                {\n                    this.updateExchangeRate()\n                    this.dialogVisible = false\n                    this.$message.success(\"保存成功\")\n                }\n            })\n\n        },\n        updateExchangeRate()\n        {\n            this.request.get(\"/others/1\").then(res => {\n                if (res.code == '200')\n                {\n                    this.orderInfo.exchangeRates = res.data\n                }\n            })\n        },\n        usernum(){\n            this.request.get(\"/user/usernum\").then(res => {\n                if (res.code == '200')\n                {\n                    this.orderInfo.numUser = res.data\n                }\n            })\n        },\n        ordernum(){\n            this.request.get(\"/order/ordernum\").then(res => {\n                if (res.code == '200')\n                {\n                    this.orderInfo.totalOrder = res.data\n                }\n            })\n        },\n        totalOrderTurnover(){\n            this.request.get(\"/order/orderturnover\").then(res => {\n                if (res.code == '200')\n                {\n                    this.orderInfo.totalOrderTurnover = res.data\n                }\n            })\n        }\n    }\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"mappings":"AA4DA,YAAAA,OAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;QACAC,OAAA;QACAC,kBAAA;QACAC,UAAA;QACAC,aAAA;MACA;MACAC,aAAA;MACAC,WAAA;IACA;EACA;EACAC,QAAA;IAAA;IACA,IAAAC,MAAA;MACAC,KAAA;QACAC,IAAA;QACAC,OAAA;QACAC,IAAA;MACA;MACAC,OAAA;QACAC,OAAA;MACA;MACAC,MAAA;QACAC,MAAA;QACAJ,IAAA;MACA;MACAK,KAAA;QACAC,IAAA;QACAnB,IAAA;MACA;MACAoB,KAAA;QACAD,IAAA;MACA;MACAE,MAAA,GACA;QACAtB,IAAA;QACAC,IAAA;QACAmB,IAAA;MACA,GACA;QACApB,IAAA;QACAC,IAAA;QACAmB,IAAA;MACA,GACA;QACApB,IAAA;QACAC,IAAA;QACAmB,IAAA;MACA,GACA;QACApB,IAAA;QACAC,IAAA;QACAmB,IAAA;MACA;IAEA;;IAEA;;IAEA,IAAAG,SAAA;MACAZ,KAAA;QACAC,IAAA;QACAC,OAAA;QACAC,IAAA;MACA;MACAC,OAAA;QACAC,OAAA;QACAQ,SAAA;MACA;MACAP,MAAA;QACAC,MAAA;QACAJ,IAAA;MACA;MACAQ,MAAA,GACA;QACAtB,IAAA;QACAoB,IAAA;QACAK,MAAA;QACAC,MAAA;QACAC,KAAA;UAAA;UACAC,MAAA;YACAC,IAAA;YACAC,QAAA;YAAA;YACAC,SAAA;cACAC,UAAA;cACAC,QAAA;cAAA;cACAC,KAAA;YACA;YACAV,SAAA;UACA;QACA;QACAvB,IAAA;QAAA;QACAkC,QAAA;UACAC,SAAA;YACAC,UAAA;YACAC,aAAA;YACAC,WAAA;UACA;QACA;MACA,GACA;QACAvC,IAAA;QACAoB,IAAA;QACAK,MAAA;QACAC,MAAA;QACAC,KAAA;UAAA;UACAC,MAAA;YACAC,IAAA;YACAC,QAAA;YAAA;YACAC,SAAA;cACAC,UAAA;cACAC,QAAA;cAAA;cACAC,KAAA;YACA;YACAV,SAAA;UACA;QACA;QACAvB,IAAA,GACA;UAAAD,IAAA;UAAAwC,KAAA;QA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}