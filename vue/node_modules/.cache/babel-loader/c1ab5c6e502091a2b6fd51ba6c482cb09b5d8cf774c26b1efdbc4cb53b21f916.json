{"ast":null,"code":"export default {\n  name: \"Role\",\n  data() {\n    return {\n      tableData: [],\n      total: 0,\n      pageNum: 1,\n      pageSize: 10,\n      name: \"\",\n      form: {},\n      dialogFormVisible: false,\n      menuDialogVis: false,\n      multipleSelection: [],\n      menuData: [],\n      props: {\n        label: 'name'\n      },\n      expends: [],\n      checks: [],\n      roleId: 0,\n      roleFlag: '',\n      ids: []\n    };\n  },\n  created() {\n    this.load();\n    this.stop();\n  },\n  methods: {\n    load() {\n      this.request.get(\"/role/page\", {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name\n        }\n      }).then(res => {\n        if (res.data != null) {\n          this.tableData = res.data.records;\n          this.total = res.data.total;\n        }\n      });\n      this.request.get(\"/menu/ids\").then(r => {\n        if (r.data != null) {\n          this.ids = r.data;\n        }\n      });\n    },\n    save() {\n      this.request.post(\"/role\", this.form).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"保存成功\");\n          this.dialogFormVisible = false;\n          this.load();\n        } else {\n          this.$message.error(\"保存失败\");\n        }\n      });\n    },\n    saveRoleMenu() {\n      this.request.post(\"/role/roleMenu/\" + this.roleId, this.$refs.tree.getCheckedKeys()).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"绑定成功\");\n          this.menuDialogVis = false;\n\n          // 操作管理员角色后需要重新登录\n          if (this.roleFlag === 'ROLE_ADMIN') {\n            this.$store.commit(\"logout\");\n          }\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleAdd() {\n      this.dialogFormVisible = true;\n      this.form = {};\n    },\n    handleEdit(row) {\n      this.form = JSON.parse(JSON.stringify(row));\n      this.dialogFormVisible = true;\n    },\n    del(id) {\n      this.request.delete(\"/role/\" + id).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"删除成功\");\n          this.load();\n        } else {\n          this.$message.error(\"删除失败\");\n        }\n      });\n    },\n    handleSelectionChange(val) {\n      console.log(val);\n      this.multipleSelection = val;\n    },\n    delBatch() {\n      let ids = this.multipleSelection.map(v => v.id); // [{}, {}, {}] => [1,2,3]\n      this.request.post(\"/role/del/batch\", ids).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"批量删除成功\");\n          this.load();\n        } else {\n          this.$message.error(\"批量删除失败\");\n        }\n      });\n    },\n    reset() {\n      this.name = \"\";\n      this.load();\n    },\n    handleSizeChange(pageSize) {\n      console.log(pageSize);\n      this.pageSize = pageSize;\n      this.load();\n    },\n    handleCurrentChange(pageNum) {\n      console.log(pageNum);\n      this.pageNum = pageNum;\n      this.load();\n    },\n    async selectMenu(role) {\n      this.roleId = role.id;\n      this.roleFlag = role.flag;\n\n      // 请求菜单数据\n      this.request.get(\"/menu\").then(res => {\n        this.menuData = res.data;\n\n        // 把后台返回的菜单数据处理成 id数组\n        this.expends = this.menuData.map(v => v.id);\n      });\n      this.request.get(\"/role/roleMenu/\" + this.roleId).then(res => {\n        this.checks = res.data;\n        this.ids.forEach(id => {\n          if (!this.checks.includes(id)) {\n            // 可能会报错：Uncaught (in promise) TypeError: Cannot read properties of undefined (reading 'setChecked')\n            this.$nextTick(() => {\n              this.$refs.tree.setChecked(id, false);\n            });\n          }\n        });\n        this.menuDialogVis = true;\n      });\n    },\n    //禁止页面滑动\n    stop() {\n      var box = function (e) {\n        passive: false;\n      };\n      document.body.style.overflow = 'hidden';\n      document.addEventListener(\"touchmove\", box, false);\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","total","pageNum","pageSize","form","dialogFormVisible","menuDialogVis","multipleSelection","menuData","props","label","expends","checks","roleId","roleFlag","ids","created","load","stop","methods","request","get","params","then","res","records","r","save","post","code","$message","success","error","saveRoleMenu","$refs","tree","getCheckedKeys","$store","commit","msg","handleAdd","handleEdit","row","JSON","parse","stringify","del","id","delete","handleSelectionChange","val","console","log","delBatch","map","v","reset","handleSizeChange","handleCurrentChange","selectMenu","role","flag","forEach","includes","$nextTick","setChecked","box","e","passive","document","body","style","overflow","addEventListener"],"sources":["src/views/Role.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div style=\"margin: 10px 0\">\r\n            <el-input style=\"width: 200px\" placeholder=\"请输入名称\" suffix-icon=\"el-icon-search\" v-model=\"name\"></el-input>\r\n            <el-button class=\"ml-5\" type=\"primary\" @click=\"load\">搜索</el-button>\r\n            <el-button type=\"warning\" @click=\"reset\">重置</el-button>\r\n        </div>\r\n\r\n        <div style=\"margin: 10px 0\">\r\n            <el-button type=\"primary\" @click=\"handleAdd\">新增 <i class=\"el-icon-circle-plus-outline\"></i></el-button>\r\n            <el-popconfirm\r\n                    class=\"ml-5\"\r\n                    confirm-button-text='确定'\r\n                    cancel-button-text='我再想想'\r\n                    icon=\"el-icon-info\"\r\n                    icon-color=\"red\"\r\n                    title=\"您确定批量删除这些数据吗？\"\r\n                    @confirm=\"delBatch\"\r\n            >\r\n                <el-button type=\"danger\" slot=\"reference\">批量删除 <i class=\"el-icon-remove-outline\"></i></el-button>\r\n            </el-popconfirm>\r\n        </div>\r\n\r\n        <el-table :data=\"tableData\" border stripe :header-cell-class-name=\"'headerBg'\"  @selection-change=\"handleSelectionChange\" max-height=\"750\">\r\n            <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n            <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\r\n            <el-table-column prop=\"name\" label=\"名称\"></el-table-column>\r\n            <el-table-column prop=\"flag\" label=\"唯一标识\"></el-table-column>\r\n            <el-table-column prop=\"description\" label=\"描述\"></el-table-column>\r\n            <el-table-column label=\"操作\"  width=\"280\" align=\"center\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button type=\"info\" @click=\"selectMenu(scope.row)\">分配菜单 <i class=\"el-icon-menu\"></i></el-button>\r\n                    <el-button type=\"success\" @click=\"handleEdit(scope.row)\">编辑 <i class=\"el-icon-edit\"></i></el-button>\r\n                    <el-popconfirm\r\n                            class=\"ml-5\"\r\n                            confirm-button-text='确定'\r\n                            cancel-button-text='我再想想'\r\n                            icon=\"el-icon-info\"\r\n                            icon-color=\"red\"\r\n                            title=\"您确定删除吗？\"\r\n                            @confirm=\"del(scope.row.id)\"\r\n                    >\r\n                        <el-button type=\"danger\" slot=\"reference\">删除 <i class=\"el-icon-remove-outline\"></i></el-button>\r\n                    </el-popconfirm>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n        <div style=\"padding: 10px 0\">\r\n            <el-pagination\r\n                    @size-change=\"handleSizeChange\"\r\n                    @current-change=\"handleCurrentChange\"\r\n                    :current-page=\"pageNum\"\r\n                    :page-sizes=\"[2, 5, 10, 20]\"\r\n                    :page-size=\"pageSize\"\r\n                    layout=\"total, sizes, prev, pager, next, jumper\"\r\n                    :total=\"total\">\r\n            </el-pagination>\r\n        </div>\r\n\r\n        <el-dialog title=\"角色信息\" :visible.sync=\"dialogFormVisible\" width=\"30%\" >\r\n            <el-form label-width=\"80px\" size=\"small\">\r\n                <el-form-item label=\"名称\">\r\n                    <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"唯一标识\">\r\n                    <el-input v-model=\"form.flag\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"描述\">\r\n                    <el-input v-model=\"form.description\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n            </div>\r\n        </el-dialog>\r\n\r\n        <el-dialog title=\"菜单分配\" :visible.sync=\"menuDialogVis\" width=\"30%\">\r\n            <el-tree\r\n                    :props=\"props\"\r\n                    :data=\"menuData\"\r\n                    show-checkbox\r\n                    node-key=\"id\"\r\n                    ref=\"tree\"\r\n                    :default-expanded-keys=\"expends\"\r\n                    :default-checked-keys=\"checks\">\r\n         <span class=\"custom-tree-node\" slot-scope=\"{ node, data }\">\r\n            <span><i :class=\"data.icon\"></i> {{ data.name }}</span>\r\n         </span>\r\n            </el-tree>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"menuDialogVis = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"saveRoleMenu\">确 定</el-button>\r\n            </div>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"Role\",\r\n    data() {\r\n        return {\r\n            tableData: [],\r\n            total: 0,\r\n            pageNum: 1,\r\n            pageSize: 10,\r\n            name: \"\",\r\n            form: {},\r\n            dialogFormVisible: false,\r\n            menuDialogVis: false,\r\n            multipleSelection: [],\r\n            menuData: [],\r\n            props: {\r\n                label: 'name',\r\n            },\r\n            expends: [],\r\n            checks: [],\r\n            roleId: 0,\r\n            roleFlag: '',\r\n            ids: []\r\n        }\r\n    },\r\n    created() {\r\n        this.load()\r\n        this.stop()\r\n    },\r\n    methods: {\r\n        load() {\r\n            this.request.get(\"/role/page\", {\r\n                params: {\r\n                    pageNum: this.pageNum,\r\n                    pageSize: this.pageSize,\r\n                    name: this.name,\r\n                }\r\n            }).then(res => {\r\n                if (res.data!=null) {\r\n                    this.tableData = res.data.records\r\n                    this.total = res.data.total\r\n                }\r\n            })\r\n\r\n            this.request.get(\"/menu/ids\").then(r => {\r\n                if (r.data!=null) {\r\n                    this.ids = r.data\r\n                }\r\n            })\r\n        },\r\n        save() {\r\n            this.request.post(\"/role\", this.form).then(res => {\r\n                if (res.code === '200') {\r\n                    this.$message.success(\"保存成功\")\r\n                    this.dialogFormVisible = false\r\n                    this.load()\r\n                } else {\r\n                    this.$message.error(\"保存失败\")\r\n                }\r\n            })\r\n        },\r\n        saveRoleMenu() {\r\n            this.request.post(\"/role/roleMenu/\" + this.roleId, this.$refs.tree.getCheckedKeys()).then(res => {\r\n                if (res.code === '200') {\r\n                    this.$message.success(\"绑定成功\")\r\n                    this.menuDialogVis = false\r\n\r\n                    // 操作管理员角色后需要重新登录\r\n                    if (this.roleFlag === 'ROLE_ADMIN') {\r\n                        this.$store.commit(\"logout\")\r\n                    }\r\n\r\n                } else {\r\n                    this.$message.error(res.msg)\r\n                }\r\n            })\r\n        },\r\n        handleAdd() {\r\n            this.dialogFormVisible = true\r\n            this.form = {}\r\n        },\r\n        handleEdit(row) {\r\n            this.form = JSON.parse(JSON.stringify(row))\r\n            this.dialogFormVisible = true\r\n        },\r\n        del(id) {\r\n            this.request.delete(\"/role/\" + id).then(res => {\r\n                if (res.code === '200') {\r\n                    this.$message.success(\"删除成功\")\r\n                    this.load()\r\n                } else {\r\n                    this.$message.error(\"删除失败\")\r\n                }\r\n            })\r\n        },\r\n        handleSelectionChange(val) {\r\n            console.log(val)\r\n            this.multipleSelection = val\r\n        },\r\n        delBatch() {\r\n            let ids = this.multipleSelection.map(v => v.id)  // [{}, {}, {}] => [1,2,3]\r\n            this.request.post(\"/role/del/batch\", ids).then(res => {\r\n                if (res.code === '200') {\r\n                    this.$message.success(\"批量删除成功\")\r\n                    this.load()\r\n                } else {\r\n                    this.$message.error(\"批量删除失败\")\r\n                }\r\n            })\r\n        },\r\n        reset() {\r\n            this.name = \"\"\r\n            this.load()\r\n        },\r\n        handleSizeChange(pageSize) {\r\n            console.log(pageSize)\r\n            this.pageSize = pageSize\r\n            this.load()\r\n        },\r\n        handleCurrentChange(pageNum) {\r\n            console.log(pageNum)\r\n            this.pageNum = pageNum\r\n            this.load()\r\n        },\r\n        async selectMenu(role) {\r\n            this.roleId = role.id\r\n            this.roleFlag = role.flag\r\n\r\n            // 请求菜单数据\r\n            this.request.get(\"/menu\").then(res => {\r\n                this.menuData = res.data\r\n\r\n                // 把后台返回的菜单数据处理成 id数组\r\n                this.expends = this.menuData.map(v => v.id)\r\n            })\r\n\r\n            this.request.get(\"/role/roleMenu/\" + this.roleId).then(res => {\r\n                this.checks = res.data\r\n                this.ids.forEach(id => {\r\n                    if (!this.checks.includes(id)) {\r\n                        // 可能会报错：Uncaught (in promise) TypeError: Cannot read properties of undefined (reading 'setChecked')\r\n                        this.$nextTick(() => {\r\n                            this.$refs.tree.setChecked(id, false)\r\n                        })\r\n                    }\r\n                })\r\n                this.menuDialogVis = true\r\n            })\r\n        },\r\n        //禁止页面滑动\r\n        stop(){\r\n            var box=function(e)\r\n            {passive: false ;};\r\n            document.body.style.overflow='hidden';\r\n            document.addEventListener(\"touchmove\",box,false);\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n\r\n<style>\r\n.headerBg {\r\n    background: #eee!important;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}