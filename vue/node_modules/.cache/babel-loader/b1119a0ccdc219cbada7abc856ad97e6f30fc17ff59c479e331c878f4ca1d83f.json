{"ast":null,"code":"export default {\n  name: \"Password\",\n  data() {\n    return {\n      form: {},\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\n      rules: {\n        password: [{\n          required: true,\n          message: '请输入原密码',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          message: '长度不少于3位',\n          trigger: 'blur'\n        }],\n        newPassword: [{\n          required: true,\n          message: '请输入新密码',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          message: '长度不少于3位',\n          trigger: 'blur'\n        }],\n        confirmPassword: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          message: '长度不少于3位',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    this.form.username = this.user.username;\n  },\n  methods: {\n    save() {\n      this.$refs.pass.validate(valid => {\n        if (valid) {\n          if (this.form.newPassword !== this.form.confirmPassword) {\n            this.$message.error(\"2次输入的新密码不相同\");\n            return false;\n          }\n          this.request.post(\"/user/password\", this.form).then(res => {\n            if (res.code === '200') {\n              this.$message.success(\"修改成功\");\n              this.$store.commit(\"logout\");\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","form","user","localStorage","getItem","JSON","parse","rules","password","required","message","trigger","min","newPassword","confirmPassword","created","username","methods","save","$refs","pass","validate","valid","$message","error","request","post","then","res","code","success","$store","commit","msg"],"sources":["../../springboot/vue/src/views/Password.vue"],"sourcesContent":["<template>\n  <el-card style=\"width: 500px;\">\n    <el-form label-width=\"120px\" size=\"small\" :model=\"form\" :rules=\"rules\" ref=\"pass\">\n\n      <el-form-item label=\"原密码\" prop=\"password\">\n        <el-input v-model=\"form.password\" autocomplete=\"off\" show-password></el-input>\n      </el-form-item>\n      <el-form-item label=\"新密码\" prop=\"newPassword\">\n        <el-input v-model=\"form.newPassword\" autocomplete=\"off\" show-password></el-input>\n      </el-form-item>\n      <el-form-item label=\"确认新密码\" prop=\"confirmPassword\">\n        <el-input v-model=\"form.confirmPassword\" autocomplete=\"off\" show-password></el-input>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n      </el-form-item>\n    </el-form>\n  </el-card>\n</template>\n\n<script>\nexport default {\n  name: \"Password\",\n  data() {\n    return {\n      form: {},\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\n      rules: {\n        password: [\n          { required: true, message: '请输入原密码', trigger: 'blur' },\n          { min: 3, message: '长度不少于3位', trigger: 'blur' }\n        ],\n        newPassword: [\n          { required: true, message: '请输入新密码', trigger: 'blur' },\n          { min: 3, message: '长度不少于3位', trigger: 'blur' }\n        ],\n        confirmPassword: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n          { min: 3, message: '长度不少于3位', trigger: 'blur' }\n        ],\n      }\n    }\n  },\n  created() {\n    this.form.username = this.user.username\n  },\n  methods: {\n    save() {\n      this.$refs.pass.validate((valid) => {\n        if (valid) {\n          if (this.form.newPassword !== this.form.confirmPassword) {\n            this.$message.error(\"2次输入的新密码不相同\")\n            return false\n          }\n          this.request.post(\"/user/password\", this.form).then(res => {\n            if (res.code === '200') {\n              this.$message.success(\"修改成功\")\n              this.$store.commit(\"logout\")\n            } else {\n              this.$message.error(res.msg)\n            }\n          })\n        }\n      })\n    },\n  }\n}\n</script>\n\n<style>\n.avatar-uploader {\n  text-align: center;\n  padding-bottom: 10px;\n}\n.avatar-uploader .el-upload {\n  border: 1px dashed #d9d9d9;\n  border-radius: 6px;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n}\n.avatar-uploader .el-upload:hover {\n  border-color: #409EFF;\n}\n.avatar-uploader-icon {\n  font-size: 28px;\n  color: #8c939d;\n  width: 138px;\n  height: 138px;\n  line-height: 138px;\n  text-align: center;\n}\n.avatar {\n  width: 138px;\n  height: 138px;\n  display: block;\n}\n</style>\n"],"mappings":"AAqBA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,IAAA,EAAAC,YAAA,CAAAC,OAAA,WAAAC,IAAA,CAAAC,KAAA,CAAAH,YAAA,CAAAC,OAAA;MACAG,KAAA;QACAC,QAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA,EACA;QACAE,WAAA,GACA;UAAAJ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA,EACA;QACAG,eAAA,GACA;UAAAL,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAI,QAAA;IACA,KAAAd,IAAA,CAAAe,QAAA,QAAAd,IAAA,CAAAc,QAAA;EACA;EACAC,OAAA;IACAC,KAAA;MACA,KAAAC,KAAA,CAAAC,IAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,SAAArB,IAAA,CAAAY,WAAA,UAAAZ,IAAA,CAAAa,eAAA;YACA,KAAAS,QAAA,CAAAC,KAAA;YACA;UACA;UACA,KAAAC,OAAA,CAAAC,IAAA,wBAAAzB,IAAA,EAAA0B,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA,KAAAN,QAAA,CAAAO,OAAA;cACA,KAAAC,MAAA,CAAAC,MAAA;YACA;cACA,KAAAT,QAAA,CAAAC,KAAA,CAAAI,GAAA,CAAAK,GAAA;YACA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}