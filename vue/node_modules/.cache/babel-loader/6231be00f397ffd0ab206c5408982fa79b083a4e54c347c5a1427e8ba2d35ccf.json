{"ast":null,"code":"import { serverIp } from \"../../../public/config\";\nexport default {\n  name: \"Person\",\n  data() {\n    return {\n      serverIp: serverIp,\n      pass: '',\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\n      ruleForm: {},\n      rules: {}\n    };\n  },\n  created() {\n    this.getUser().then(res => {\n      this.ruleForm = res;\n    });\n  },\n  methods: {\n    async getUser() {\n      return (await this.request.get(\"/user/username/\" + this.user.username)).data;\n    },\n    save(ruleForm) {\n      this.request.post(\"/user/saveByUser\", ruleForm).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"Сохранено успешно\");\n\n          // 触发父级更新User的方法\n          this.$emit(\"refreshUser\");\n\n          // 更新浏览器存储的用户信息\n          this.getUser().then(res => {\n            res.token = JSON.parse(localStorage.getItem(\"user\")).token;\n            localStorage.setItem(\"user\", JSON.stringify(res));\n          });\n        } else {\n          this.$message.error(\"Не удалось сохранить\");\n        }\n      });\n    },\n    handleAvatarSuccess(res) {\n      this.form.avatarUrl = res;\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"names":["serverIp","name","data","pass","user","localStorage","getItem","JSON","parse","ruleForm","rules","created","getUser","then","res","methods","request","get","username","save","post","code","$message","success","$emit","token","setItem","stringify","error","handleAvatarSuccess","form","avatarUrl","resetForm","formName","$refs","resetFields"],"sources":["src/views/front/Person.vue"],"sourcesContent":["<template>\r\n    <div style=\"position: relative; right: -25%;top: 10%; width: 60%\">\r\n    <el-card style=\"width: 500px;\">\r\n        <el-form :model=\"ruleForm\" status-icon :rules=\"rules\" ref=\"ruleForm\" label-width=\"80px\">\r\n            <el-form-item :label=\"$t('username')\" prop=\"username\">\r\n                <el-input type=\"username\" v-model=\"ruleForm.username\" autocomplete=\"off\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item :label=\"$t('nickname')\" prop=\"checkPass\">\r\n                <el-input type=\"nickname\" v-model=\"ruleForm.nickname\" autocomplete=\"off\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item :label=\"$t('email')\" prop=\"email\">\r\n                <el-input v-model.number=\"ruleForm.email\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item :label=\"$t('phone')\" prop=\"phone\">\r\n                <el-input v-model.number=\"ruleForm.phone\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item :label=\"$t('address')\" prop=\"address\">\r\n                <el-input v-model.number=\"ruleForm.address\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-button v-no-more-click type=\"primary\" @click=\"save('ruleForm')\">{{$t('confirm')}}</el-button>\r\n            </el-form-item>\r\n        </el-form>\r\n<!--        <el-form label-width=\"80px\" size=\"small\">-->\r\n<!--            <el-form-item :label=\"$t('username')\">-->\r\n<!--                <el-input v-model=\"form.username\" disabled autocomplete=\"off\"></el-input>-->\r\n<!--            </el-form-item>-->\r\n<!--            <el-form-item :label=\"$t('nickname')\">-->\r\n<!--                <el-input v-model=\"form.nickname\" autocomplete=\"off\"></el-input>-->\r\n<!--            </el-form-item>-->\r\n<!--            <el-form-item :label=\"$t('email')\">-->\r\n<!--                <el-input v-model=\"form.email\" autocomplete=\"off\"></el-input>-->\r\n<!--            </el-form-item>-->\r\n<!--            <el-form-item :label=\"$t('phone')\">-->\r\n<!--                <el-input v-model=\"form.phone\" autocomplete=\"off\"></el-input>-->\r\n<!--            </el-form-item>-->\r\n<!--            <el-form-item :label=\"$t('address')\">-->\r\n<!--                <el-input type=\"textarea\" v-model=\"form.address\" autocomplete=\"off\"></el-input>-->\r\n<!--            </el-form-item>-->\r\n<!--            <el-form-item>-->\r\n<!--                <el-button v-no-more-click type=\"primary\" @click=\"save\">{{$t('confirm')}}</el-button>-->\r\n<!--            </el-form-item>-->\r\n<!--        </el-form>-->\r\n    </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {serverIp} from \"../../../public/config\";\r\n\r\nexport default {\r\n    name: \"Person\",\r\n    data() {\r\n        return {\r\n            serverIp: serverIp,\r\n            pass: '',\r\n            user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\r\n            ruleForm: {},\r\n            rules:{\r\n\r\n            },\r\n        }\r\n    },\r\n    created() {\r\n        this.getUser().then(res => {\r\n            this.ruleForm = res\r\n        })\r\n    },\r\n    methods: {\r\n        async getUser() {\r\n            return (await this.request.get(\"/user/username/\" + this.user.username)).data\r\n        },\r\n        save(ruleForm) {\r\n            this.request.post(\"/user/saveByUser\", ruleForm).then(res => {\r\n                if (res.code === '200') {\r\n                    this.$message.success(\"Сохранено успешно\")\r\n\r\n                    // 触发父级更新User的方法\r\n                    this.$emit(\"refreshUser\")\r\n\r\n                    // 更新浏览器存储的用户信息\r\n                    this.getUser().then(res => {\r\n                        res.token = JSON.parse(localStorage.getItem(\"user\")).token\r\n                        localStorage.setItem(\"user\", JSON.stringify(res))\r\n                    })\r\n\r\n                } else {\r\n                    this.$message.error(\"Не удалось сохранить\")\r\n                }\r\n            })\r\n        },\r\n        handleAvatarSuccess(res) {\r\n            this.form.avatarUrl = res\r\n        },\r\n        resetForm(formName) {\r\n            this.$refs[formName].resetFields();\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.avatar-uploader {\r\n    text-align: center;\r\n    padding-bottom: 10px;\r\n}\r\n.avatar-uploader .el-upload {\r\n    border: 1px dashed #d9d9d9;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    position: relative;\r\n    overflow: hidden;\r\n}\r\n.avatar-uploader .el-upload:hover {\r\n    border-color: #409EFF;\r\n}\r\n.avatar-uploader-icon {\r\n    font-size: 28px;\r\n    color: #8c939d;\r\n    width: 138px;\r\n    height: 138px;\r\n    line-height: 138px;\r\n    text-align: center;\r\n}\r\n.avatar {\r\n    width: 138px;\r\n    height: 138px;\r\n    display: block;\r\n}\r\n</style>\r\n"],"mappings":"AAgDA,SAAAA,QAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAF,QAAA,EAAAA,QAAA;MACAG,IAAA;MACAC,IAAA,EAAAC,YAAA,CAAAC,OAAA,WAAAC,IAAA,CAAAC,KAAA,CAAAH,YAAA,CAAAC,OAAA;MACAG,QAAA;MACAC,KAAA,GAEA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,OAAA,GAAAC,IAAA,CAAAC,GAAA;MACA,KAAAL,QAAA,GAAAK,GAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAH,QAAA;MACA,mBAAAI,OAAA,CAAAC,GAAA,0BAAAb,IAAA,CAAAc,QAAA,GAAAhB,IAAA;IACA;IACAiB,KAAAV,QAAA;MACA,KAAAO,OAAA,CAAAI,IAAA,qBAAAX,QAAA,EAAAI,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAO,IAAA;UACA,KAAAC,QAAA,CAAAC,OAAA;;UAEA;UACA,KAAAC,KAAA;;UAEA;UACA,KAAAZ,OAAA,GAAAC,IAAA,CAAAC,GAAA;YACAA,GAAA,CAAAW,KAAA,GAAAlB,IAAA,CAAAC,KAAA,CAAAH,YAAA,CAAAC,OAAA,UAAAmB,KAAA;YACApB,YAAA,CAAAqB,OAAA,SAAAnB,IAAA,CAAAoB,SAAA,CAAAb,GAAA;UACA;QAEA;UACA,KAAAQ,QAAA,CAAAM,KAAA;QACA;MACA;IACA;IACAC,oBAAAf,GAAA;MACA,KAAAgB,IAAA,CAAAC,SAAA,GAAAjB,GAAA;IACA;IACAkB,UAAAC,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAE,WAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}